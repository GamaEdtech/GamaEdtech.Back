// <auto-generated />
using System;
using GamaEdtech.Back.Infrastructure.DbContexts.Sql.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Microsoft.SqlServer.Types;

#nullable disable

namespace GamaEdtech.Back.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250309215441_AddMediaEntity")]
    partial class AddMediaEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GamaEdtech.Back.FAQ.Domain.Entities.FAQ.Aggregates.FAQAndFAQCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FAQCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FAQId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FAQCategoryId");

                    b.HasIndex("FAQId");

                    b.ToTable("FAQAndFAQCategories");
                });

            modelBuilder.Entity("GamaEdtech.Back.FAQ.Domain.Entities.FAQ.Aggregates.Media", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FAQId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MediaEntity")
                        .HasColumnType("int");

                    b.Property<Guid>("MediaEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MediaType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FAQId");

                    b.HasIndex("MediaEntity", "MediaEntityId");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("GamaEdtech.Back.FAQ.Domain.Entities.FAQ.FAQ", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SummaryOfQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FAQS");
                });

            modelBuilder.Entity("GamaEdtech.Back.FAQ.Domain.Entities.FAQCategory.FAQCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<int>("CategoryType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<HierarchyId>("HierarchyPath")
                        .IsRequired()
                        .HasColumnType("hierarchyid");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FAQCategories");
                });

            modelBuilder.Entity("GamaEdtech.Back.FAQ.Domain.Entities.FAQ.Aggregates.FAQAndFAQCategory", b =>
                {
                    b.HasOne("GamaEdtech.Back.FAQ.Domain.Entities.FAQCategory.FAQCategory", "FAQCategory")
                        .WithMany("FAQAndFAQCategories")
                        .HasForeignKey("FAQCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Back.FAQ.Domain.Entities.FAQ.FAQ", "FAQ")
                        .WithMany("FAQAndFAQCategories")
                        .HasForeignKey("FAQId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FAQ");

                    b.Navigation("FAQCategory");
                });

            modelBuilder.Entity("GamaEdtech.Back.FAQ.Domain.Entities.FAQ.Aggregates.Media", b =>
                {
                    b.HasOne("GamaEdtech.Back.FAQ.Domain.Entities.FAQ.FAQ", null)
                        .WithMany("Media")
                        .HasForeignKey("FAQId");
                });

            modelBuilder.Entity("GamaEdtech.Back.FAQ.Domain.Entities.FAQ.FAQ", b =>
                {
                    b.Navigation("FAQAndFAQCategories");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("GamaEdtech.Back.FAQ.Domain.Entities.FAQCategory.FAQCategory", b =>
                {
                    b.Navigation("FAQAndFAQCategories");
                });
#pragma warning restore 612, 618
        }
    }
}

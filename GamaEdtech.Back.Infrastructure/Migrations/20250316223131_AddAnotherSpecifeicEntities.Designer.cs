// <auto-generated />
using System;
using GamaEdtech.Back.Infrastructure.DbContexts.Sql.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Microsoft.SqlServer.Types;
using NetTopologySuite.Geometries;

#nullable disable

namespace GamaEdtech.Back.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250316223131_AddAnotherSpecifeicEntities")]
    partial class AddAnotherSpecifeicEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.EntityVersion.EntityVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FAQAndFAQCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FAQCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FAQId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MediaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("SchoolCommentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SchoolImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FAQAndFAQCategoryId");

                    b.HasIndex("FAQCategoryId");

                    b.HasIndex("FAQId");

                    b.HasIndex("LocationId");

                    b.HasIndex("MediaId");

                    b.HasIndex("SchoolCommentId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("SchoolImageId");

                    b.ToTable("EntityVersions");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.FAQ.Aggregates.FAQAndFAQCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FAQCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FAQId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FAQCategoryId");

                    b.HasIndex("FAQId");

                    b.ToTable("FAQAndFAQCategories");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.FAQ.Aggregates.Media", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FAQId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MediaEntity")
                        .HasColumnType("int");

                    b.Property<Guid>("MediaEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MediaType")
                        .HasColumnType("int");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FAQId");

                    b.HasIndex("MediaEntity", "MediaEntityId");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.FAQ.FAQ", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SummaryOfQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FAQS");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.FAQCategory.FAQCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<int>("CategoryType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<HierarchyId>("HierarchyPath")
                        .IsRequired()
                        .HasColumnType("hierarchyid");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FAQCategories");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.Location.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Point>("Coordinates")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<HierarchyId>("HierarchyPath")
                        .IsRequired()
                        .HasColumnType("hierarchyid");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LatinTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("LocationType")
                        .HasColumnType("int");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("HierarchyPath");

                    b.HasIndex("LocationType");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.School.Aggregates.SchoolComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<double>("ArtisticActivitiesRate")
                        .HasColumnType("float");

                    b.Property<double>("AverageRate")
                        .HasColumnType("float");

                    b.Property<double>("BehaviorRate")
                        .HasColumnType("float");

                    b.Property<string>("BodyComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ClassesQualityRate")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DislikeCount")
                        .HasColumnType("int");

                    b.Property<double>("EducationRate")
                        .HasColumnType("float");

                    b.Property<double>("FacilitiesRate")
                        .HasColumnType("float");

                    b.Property<double>("ITTrainingRate")
                        .HasColumnType("float");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LikeCount")
                        .HasColumnType("int");

                    b.Property<double>("SafetyAndHappinessRate")
                        .HasColumnType("float");

                    b.Property<Guid>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TuitionRatioRate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("SchoolComments");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.School.Aggregates.SchoolImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileType")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("SchoolImages");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.School.School", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Facilities")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("OsmId")
                        .HasColumnType("bigint");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Quarter")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SchoolType")
                        .HasColumnType("int");

                    b.Property<double?>("Score")
                        .HasColumnType("float");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("WebSite")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.EntityVersion.EntityVersion", b =>
                {
                    b.HasOne("GamaEdtech.Back.Domain.Entities.FAQ.Aggregates.FAQAndFAQCategory", null)
                        .WithMany("Versions")
                        .HasForeignKey("FAQAndFAQCategoryId");

                    b.HasOne("GamaEdtech.Back.Domain.Entities.FAQCategory.FAQCategory", null)
                        .WithMany("Versions")
                        .HasForeignKey("FAQCategoryId");

                    b.HasOne("GamaEdtech.Back.Domain.Entities.FAQ.FAQ", null)
                        .WithMany("Versions")
                        .HasForeignKey("FAQId");

                    b.HasOne("GamaEdtech.Back.Domain.Entities.Location.Location", null)
                        .WithMany("Versions")
                        .HasForeignKey("LocationId");

                    b.HasOne("GamaEdtech.Back.Domain.Entities.FAQ.Aggregates.Media", null)
                        .WithMany("Versions")
                        .HasForeignKey("MediaId");

                    b.HasOne("GamaEdtech.Back.Domain.Entities.School.Aggregates.SchoolComment", null)
                        .WithMany("Versions")
                        .HasForeignKey("SchoolCommentId");

                    b.HasOne("GamaEdtech.Back.Domain.Entities.School.School", null)
                        .WithMany("Versions")
                        .HasForeignKey("SchoolId");

                    b.HasOne("GamaEdtech.Back.Domain.Entities.School.Aggregates.SchoolImage", null)
                        .WithMany("Versions")
                        .HasForeignKey("SchoolImageId");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.FAQ.Aggregates.FAQAndFAQCategory", b =>
                {
                    b.HasOne("GamaEdtech.Back.Domain.Entities.FAQCategory.FAQCategory", "FAQCategory")
                        .WithMany("FAQAndFAQCategories")
                        .HasForeignKey("FAQCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GamaEdtech.Back.Domain.Entities.FAQ.FAQ", "FAQ")
                        .WithMany("FAQAndFAQCategories")
                        .HasForeignKey("FAQId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FAQ");

                    b.Navigation("FAQCategory");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.FAQ.Aggregates.Media", b =>
                {
                    b.HasOne("GamaEdtech.Back.Domain.Entities.FAQ.FAQ", null)
                        .WithMany("Media")
                        .HasForeignKey("FAQId");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.School.Aggregates.SchoolComment", b =>
                {
                    b.HasOne("GamaEdtech.Back.Domain.Entities.School.School", "School")
                        .WithMany("SchoolComments")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.School.Aggregates.SchoolImage", b =>
                {
                    b.HasOne("GamaEdtech.Back.Domain.Entities.School.School", "School")
                        .WithMany("schoolImages")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.School.School", b =>
                {
                    b.HasOne("GamaEdtech.Back.Domain.Entities.Location.Location", "Location")
                        .WithMany("Schools")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.FAQ.Aggregates.FAQAndFAQCategory", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.FAQ.Aggregates.Media", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.FAQ.FAQ", b =>
                {
                    b.Navigation("FAQAndFAQCategories");

                    b.Navigation("Media");

                    b.Navigation("Versions");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.FAQCategory.FAQCategory", b =>
                {
                    b.Navigation("FAQAndFAQCategories");

                    b.Navigation("Versions");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.Location.Location", b =>
                {
                    b.Navigation("Schools");

                    b.Navigation("Versions");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.School.Aggregates.SchoolComment", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.School.Aggregates.SchoolImage", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("GamaEdtech.Back.Domain.Entities.School.School", b =>
                {
                    b.Navigation("SchoolComments");

                    b.Navigation("Versions");

                    b.Navigation("schoolImages");
                });
#pragma warning restore 612, 618
        }
    }
}
